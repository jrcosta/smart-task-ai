# Docker Compose para executar apenas os serviços de observabilidade
# Use este arquivo se você já tem o backend rodando localmente
# Comando: docker-compose -f docker-compose-observability.yml up -d

services:
  # Jaeger - Para visualização de traces distribuídos
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: smarttask-jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"  # Jaeger UI
      - "14250:14250"  # gRPC collector
      - "4317:4317"    # OTLP gRPC receiver
      - "4318:4318"    # OTLP HTTP receiver
    networks:
      - smarttask-observability

  # Prometheus - Para coleta de métricas
  prometheus:
    image: prom/prometheus:latest
    container_name: smarttask-prometheus
    volumes:
      - ../observability/prometheus-local.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - smarttask-observability
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Grafana - Para dashboard de observabilidade
  grafana:
    image: grafana/grafana:latest
    container_name: smarttask-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ../observability/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ../observability/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3001:3000"
    networks:
      - smarttask-observability
    depends_on:
      - prometheus
      - jaeger

volumes:
  prometheus_data:
  grafana_data:

networks:
  smarttask-observability:
    driver: bridge
