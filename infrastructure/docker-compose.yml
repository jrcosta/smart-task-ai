version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: smarttask-postgres
    environment:
      POSTGRES_DB: smarttask
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - smarttask-network

  # Jaeger - Para visualização de traces distribuídos
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: smarttask-jaeger
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "16686:16686"  # Jaeger UI
      - "14250:14250"  # gRPC collector
      - "4317:4317"    # OTLP gRPC receiver
      - "4318:4318"    # OTLP HTTP receiver
    networks:
      - smarttask-network

  # Prometheus - Para coleta de métricas
  prometheus:
    image: prom/prometheus:latest
    container_name: smarttask-prometheus
    volumes:
      - ./observability/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - smarttask-network
    depends_on:
      - backend

  # Grafana - Para dashboard de observabilidade
  grafana:
    image: grafana/grafana:latest
    container_name: smarttask-grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SECURITY_ADMIN_USER=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./observability/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./observability/grafana/datasources:/etc/grafana/provisioning/datasources
    ports:
      - "3001:3000"
    networks:
      - smarttask-network
    depends_on:
      - prometheus
      - jaeger

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: smarttask-backend
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/smarttask
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID:-}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN:-}
      TWILIO_WHATSAPP_NUMBER: ${TWILIO_WHATSAPP_NUMBER:-}
      OTEL_EXPORTER_JAEGER_ENDPOINT: http://jaeger:14250
      OTEL_EXPORTER_OTLP_ENDPOINT: http://jaeger:4317
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - jaeger
    networks:
      - smarttask-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: smarttask-frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - smarttask-network
    restart: unless-stopped

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:

networks:
  smarttask-network:
    driver: bridge
