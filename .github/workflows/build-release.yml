name: Build & Release

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  # ============================================
  # BUILD BACKEND
  # ============================================
  build-backend:
    name: Build Backend Release
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup JDK 25
        uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'temurin'
          cache: maven
      
      - name: Build Backend JAR
        run: cd backend && mvn clean package -DskipTests
      
      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: backend/target/*.jar

  # ============================================
  # BUILD FRONTEND
  # ============================================
  build-frontend:
    name: Build Frontend Release
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      
      - name: Build Frontend
        run: cd frontend && npm ci --legacy-peer-deps && npm run build
      
      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist/

  # ============================================
  # BUILD DOCKER IMAGES
  # ============================================
  build-docker:
    name: Build & Push Docker Images
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    
    strategy:
      matrix:
        include:
          - dockerfile: backend/Dockerfile
            image: jrcosta/smart-task-backend
          - dockerfile: frontend/Dockerfile
            image: jrcosta/smart-task-frontend
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
        continue-on-error: true
      
      - name: Get Version
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: false
          tags: |
            ${{ matrix.image }}:${{ steps.version.outputs.VERSION }}
            ${{ matrix.image }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # ============================================
  # CREATE RELEASE
  # ============================================
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend, build-docker]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts/
      
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## üöÄ Smart Task AI - Release ${{ github.ref }}
            
            ### üì¶ Artifacts
            - Backend JAR: Available in artifacts
            - Frontend Build: Available in artifacts
            - Docker Images: Published to Docker Hub
            
            ### ‚úÖ Tests Passed
            All validation checks completed successfully!
            
            ### üìù Changelog
            See commit history for detailed changes.
          draft: false
          prerelease: false
