name: Security Analysis

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
  schedule:
    - cron: '0 3 * * 0'  # Weekly on Sunday at 3 AM UTC

permissions:
  contents: read
  security-events: write

jobs:
  # ============================================
  # DEPENDENCY SCANNING
  # ============================================
  dependency-check:
    name: Dependency Security Check
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup JDK 25
        uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'temurin'
          cache: maven
      
      - name: Run Dependency-Check (Backend)
        run: cd backend && mvn org.owasp:dependency-check-maven:check
        continue-on-error: true
      
      - name: Upload Dependency Check Report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: backend/target/dependency-check-report.html
        continue-on-error: true

  # ============================================
  # JAVA SECURITY SCAN (CodeQL)
  # ============================================
  codeql-java:
    name: CodeQL - Java Analysis
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: 'java'
          build-mode: 'manual'
      
      - name: Setup JDK 25
        uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'temurin'
          cache: maven
      
      - name: Build Backend
        run: cd backend && mvn clean compile -DskipTests
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: '/language:java'

  # ============================================
  # JAVASCRIPT/TYPESCRIPT SECURITY SCAN (CodeQL)
  # ============================================
  codeql-javascript:
    name: CodeQL - JavaScript/TypeScript Analysis
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: 'javascript-typescript'
      
      - name: Autobuild
        uses: github/codeql-action/autobuild@v2
      
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2
        with:
          category: '/language:javascript'

  # ============================================
  # SONARCLOUD SECURITY HOTSPOTS
  # ============================================
  sonarcloud-security:
    name: SonarCloud Security Hotspots
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup JDK 25
        uses: actions/setup-java@v4
        with:
          java-version: '25'
          distribution: 'temurin'
          cache: maven
      
      - name: SonarCloud Security Scan
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd backend && mvn clean verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
            -Dsonar.projectKey=jrcosta_smart-task-ai \
            -Dsonar.organization=jrcosta \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN
        continue-on-error: true

  # ============================================
  # CONTAINER SECURITY SCAN (Trivy)
  # ============================================
  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Build Backend Image
        run: docker build -t smart-task-backend:test backend/
        continue-on-error: true
      
      - name: Build Frontend Image
        run: docker build -t smart-task-frontend:test frontend/
        continue-on-error: true
      
      - name: Run Trivy Scan on Backend Image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'smart-task-backend:test'
          format: 'sarif'
          output: 'backend-trivy-results.sarif'
        continue-on-error: true
      
      - name: Run Trivy Scan on Frontend Image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'smart-task-frontend:test'
          format: 'sarif'
          output: 'frontend-trivy-results.sarif'
        continue-on-error: true
      
      - name: Upload Trivy Results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'backend-trivy-results.sarif,frontend-trivy-results.sarif'
        continue-on-error: true

  # ============================================
  # SECRET SCANNING
  # ============================================
  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: TruffleHog Secret Scan
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: master
          head: HEAD
          extra_args: --debug --only-verified
        continue-on-error: true

  # ============================================
  # LICENSE COMPLIANCE
  # ============================================
  license-check:
    name: License Compliance Check
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Check Backend Licenses
        run: |
          cd backend
          mvn license:check || true
        continue-on-error: true
      
      - name: Check Frontend Licenses
        run: |
          cd frontend
          npm install -g license-checker
          license-checker --onlyAllow "Apache-2.0,MIT,BSD,ISC,MPL-2.0" || true
        continue-on-error: true

  # ============================================
  # SECURITY SUMMARY
  # ============================================
  security-summary:
    name: Security Analysis Summary
    runs-on: ubuntu-latest
    needs: [dependency-check, codeql-java, codeql-javascript, sonarcloud-security, container-scan, secret-scan, license-check]
    if: always()
    
    steps:
      - name: Generate Security Summary
        run: |
          echo "### ðŸ”’ Security Analysis Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Check | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Dependency Check | âœ… Completed |" >> $GITHUB_STEP_SUMMARY
          echo "| CodeQL - Java | âœ… Completed |" >> $GITHUB_STEP_SUMMARY
          echo "| CodeQL - JavaScript | âœ… Completed |" >> $GITHUB_STEP_SUMMARY
          echo "| SonarCloud Security Hotspots | âœ… Completed |" >> $GITHUB_STEP_SUMMARY
          echo "| Container Scan (Trivy) | âœ… Completed |" >> $GITHUB_STEP_SUMMARY
          echo "| Secret Scanning | âœ… Completed |" >> $GITHUB_STEP_SUMMARY
          echo "| License Compliance | âœ… Completed |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Scan completed at: $(date)**" >> $GITHUB_STEP_SUMMARY
      
      - name: Print Summary
        run: |
          echo "âœ… Security Analysis Completed"
          echo ""
          echo "Checks performed:"
          echo "  âœ“ Dependency Check (OWASP)"
          echo "  âœ“ CodeQL Static Analysis (Java + JS/TS)"
          echo "  âœ“ SonarCloud Security Hotspots"
          echo "  âœ“ Container Image Scanning (Trivy)"
          echo "  âœ“ Secret Scanning (TruffleHog)"
          echo "  âœ“ License Compliance"
