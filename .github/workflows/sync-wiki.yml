name: Sync Wiki

on:
  push:
    branches:
      - master
      - main
    paths:
      - 'wiki/**'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  sync-wiki:
    name: Sincronizar Wiki com GitHub Wiki
    runs-on: ubuntu-latest

    steps:
      - name: Checkout reposit√≥rio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configurar Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Clonar reposit√≥rio wiki
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git clone "https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}.wiki.git" /tmp/wiki

      - name: Sincronizar arquivos
        run: |
          # Copiar arquivos da wiki para o reposit√≥rio wiki (inclui arquivos ocultos)
          if [ -n "$(ls -A wiki/)" ]; then
            cp -r wiki/. /tmp/wiki/
          else
            echo "‚ö†Ô∏è Pasta wiki/ est√° vazia"
            exit 1
          fi

      - name: Commit e Push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd /tmp/wiki

          # Verificar se h√° mudan√ßas
          if [ -z "$(git status --porcelain)" ]; then
            echo "‚úÖ Nenhuma mudan√ßa detectada na wiki"
            exit 0
          fi

          # Adicionar e commitar
          git add .
          git commit -m "Atualizar wiki (sincronizado do reposit√≥rio principal)"

          # Detectar branch padr√£o e fazer push
          DEFAULT_BRANCH=$(git remote show origin | grep 'HEAD branch' | cut -d' ' -f5)
          if [ -z "$DEFAULT_BRANCH" ]; then
            DEFAULT_BRANCH="master"
          fi

          echo "üì§ Fazendo push para branch: $DEFAULT_BRANCH"
          git push origin "$DEFAULT_BRANCH"

          echo "‚úÖ Wiki sincronizada com sucesso!"
          echo "üåê Acesse em: https://github.com/${{ github.repository }}/wiki"
